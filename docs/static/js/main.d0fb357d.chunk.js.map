{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","value","setValue","onSubmit","e","preventDefault","length","arr","onChange","target","getGifs","category","a","url","encodeURI","fetch","response","json","data","gifs","map","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","useFetchGifs","gif","GifExpertApp","categories","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4MAEaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEpBC,mBAAS,IAFW,mBAEvCC,EAFuC,KAEhCC,EAFgC,KAiB9C,OACI,8BACI,sBAAMC,SAfO,SAACC,GAClBA,EAAEC,iBAECJ,EAAMK,OAAS,GACdP,GAAc,SAAAQ,GAAG,OAAKN,GAAL,mBAAeM,QAWhC,SACI,uBAAOC,SAPI,SAACJ,GACpBF,EAAUE,EAAEK,OAAOR,e,+BChBdS,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAIII,MAAMF,GAJV,cAIbG,EAJa,gBAMEA,EAASC,OANX,uBAMZC,EANY,EAMZA,KAEDC,EAAOD,EAAKE,KAAI,gBAAEC,EAAF,EAAEA,GAAIC,EAAN,EAAMA,MAAOC,EAAb,EAAaA,OAAb,MAElB,CACIF,GAAIA,EACJC,MAAOA,EACPT,IAAG,OAAEU,QAAF,IAAEA,OAAF,EAAEA,EAAQC,iBAAiBX,QAbnB,kBAkBZM,GAlBY,4CAAH,sDCEPM,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,IACpC,OACI,sBAAKa,UAAU,8DAAf,UACI,qBAAKC,IAAKd,EAAKe,IAAKN,IACpB,4BAAIA,QCFHO,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAAc,ECDX,SAAEA,GAAe,IAAD,EAEdX,mBAAS,CAC/BkB,KAAM,GACNY,SAAQ,IAJ4B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAU,WAENvB,EAAQC,GACHuB,MAAM,SAAAf,GACHa,EAAS,CACLd,KAAMC,EACNW,SAAQ,SAIrB,CAACnB,IAEGoB,EDhBsBI,CAAaxB,GAA9BQ,EAFuB,EAE5BD,KAAWY,EAFiB,EAEjBA,QAGlB,OACI,gCACI,6BAAKnB,IAEJmB,GAAW,aAGTX,EAAKC,KAAI,SAAAgB,GAAG,OACP,cAAC,EAAD,eAA8BA,GAAZA,EAAIf,WEY3BgB,EAzBM,WAEjB,IAFuB,EAIarC,mBAFb,CAAC,KAFD,mBAIhBsC,EAJgB,KAIJvC,EAJI,KAMvB,OACI,qCACI,oBAAI2B,UAAU,oCAAd,0BACA,cAAC,EAAD,CAAa3B,cAAeA,IAE5B,6BAEQuC,EAAWlB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAUA,GADLA,YCd7B4B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d0fb357d.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const AddCategory = ( {setCategories} ) => {\r\n\r\n    const [value, setValue] = useState('');\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        \r\n        if(value.length > 2){\r\n            setCategories(arr => [value, ...arr])\r\n        }\r\n\r\n    }\r\n\r\n    const handleSetValue = (e) => {\r\n        setValue( e.target.value );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <form onSubmit={handleSubmit}>\r\n                <input onChange={handleSetValue}  />\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","export const getGifs = async (category) => {\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=15&api_key=130w2WFTFJqZhC7IcC9VDpNEzWqQh9Ku`;\r\n\r\n    const response = await fetch(url);\r\n    \r\n    const {data} = await response.json();\r\n\r\n    const gifs = data.map(({id, title, images}) => (\r\n        \r\n        {\r\n            id: id,\r\n            title: title,\r\n            url: images?.downsized_medium.url\r\n        }\r\n        \r\n    ));\r\n\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n    return (\r\n        <div className=\"gif-item animate__animated animate__backInLeft hover-effect\">\r\n            <img src={url} alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    const {data:gifs, loading} = useFetchGifs(category);\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h3>{category}</h3>\r\n\r\n            {loading && 'Loading...'}\r\n\r\n            {\r\n               gifs.map(gif => (\r\n                    <GifGridItem key={gif.id} {...gif} />\r\n                ))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n    \r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs(category)\r\n            .then( gifs => {\r\n                setState({\r\n                    data: gifs,\r\n                    loading:false\r\n                });\r\n            });\r\n\r\n    }, [category]);\r\n\r\n    return state;\r\n\r\n}\r\n","import React, {useState} from 'react'\r\nimport { AddCategory } from './components/AddCategory'\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const arr_categories = [''];\r\n\r\n    const [categories, setCategories] = useState(arr_categories);\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"animate__animated animate__bounce\">GifExpertApp</h1>\r\n            <AddCategory setCategories={setCategories} />\r\n            \r\n            <ol>\r\n                {\r\n                    categories.map(category => (\r\n                        <GifGrid \r\n                        key={category}\r\n                        category={category}\r\n                        />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}